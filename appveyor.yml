os: Visual Studio 2017
version: 1.1.{build}
configuration: Release
environment:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  AVAPIKEY:
    secure: BGmpOSSetJe8WsYsYM3zkm+fXVh2YDsJ1lyQiTeuOdQ=
  RELEASEREGEX: ^v\d+\.\d+\.\d+(-(?<prerelease>[\w\d]+))?$
init:
- ps: |
    if ($env:APPVEYOR_REPO_TAG -eq $true -and $env:APPVEYOR_REPO_TAG_NAME  -match $env:RELEASEREGEX)
    {
        $env:TaggedForRelease = $true
        $env:TaggedForPreRelease = $matches.prerelease -ne $null
        $relName = if ($env:TaggedForPreRelease) { "PreRelease" } else { "Release" }
        Add-AppveyorMessage "Tagged For $($relName): $($env:APPVEYOR_REPO_TAG_NAME)" -details $env:APPVEYOR_REPO_COMMIT
        Update-AppveyorBuild -Version "$env:APPVEYOR_REPO_TAG_NAME".Substring(1)
    }
before_build:
- dotnet --info
- dotnet restore
build_script:
- dotnet build -c %CONFIGURATION% /p:Version=%APPVEYOR_BUILD_VERSION%
after_build:
- dotnet pack -c %CONFIGURATION% .\ClubHouse\ClubHouse.csproj -o .\artifacts /p:Version=%APPVEYOR_BUILD_VERSION%
test: off
artifacts:
- path: .\ClubHouse\artifacts\**\*.*
deploy:
- provider: NuGet
  api_key:
    secure: Gerln5x/jQ3CsCjXe76zQuP2Rjh12sKBH2wj88LIpt1IQym1+6MlFVWmvx5j+KSw
  skip_symbols: false
  artifact: /.*\.nupkg/
  on:
    TaggedForRelease: true
    TaggedForPreRelease : false
    Blargh: true

- provider: GitHub
  release: $(APPVEYOR_REPO_TAG_NAME)
  prerelease: $(TaggedForPreRelease)
  description: 'Release of $(APPVEYOR_REPO_TAG_NAME)'
  auth_token:
    secure: uLTEBGoagOuXDvbSbUqHe2k/7Oyk4lttpWKHBn4mRdSiZP6aCB9MMybins2dQLCZ
  artifact: /.*\.nupkg/ # upload all NuGet packages to release assets
  on:
    TaggedForRelease: true
after_deploy:
- ps: | 
    $token = $env:AVAPIKEY
    $headers = @{
      "Authorization" = "Bearer $token"
      "Content-type" = "application/json"
    }
    (invoke-webrequest https://ci.appveyor.com/api/projects/Soda-Digital/clubhouse/history?recordsNumber=100 -Headers $headers).builds `
    | ? tag -Match $env:RELEASEREGEX | sort finished -desc | select -first 1
